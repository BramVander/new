{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bram1\\\\Documents\\\\GitHub\\\\react\\\\usePopcorn\\\\src\\\\components\\\\MovieDetails.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport StarRating from \"./StarRating\";\nimport Loader from \"./UI/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst KEY = \"5fdc2a2\";\nfunction MovieDetails(_ref) {\n  _s();\n  let {\n    selectedId,\n    onCloseMovie,\n    onAddWatched\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [movie, setMovie] = useState({});\n  const [userRating, setUserRating] = useState(\"\");\n  const {\n    Title: title,\n    Year: year,\n    Poster: poster,\n    Runtime: runtime,\n    imdbRating,\n    Plot: plot,\n    Released: released,\n    Actors: actors,\n    Director: director,\n    Genre: genre\n  } = movie;\n  function handleAdd() {\n    const newWatchedMovie = {\n      imdbId: selectedId,\n      title,\n      year,\n      poster,\n      imdbRating: Number(imdbRating),\n      runtime: Number(runtime.split(\" \").at(0)),\n      userRating\n    };\n    onAddWatched(newWatchedMovie);\n    onCloseMovie();\n  }\n  useEffect(function () {\n    async function getMovieDetails() {\n      try {\n        setIsLoading(true);\n        const res = await fetch(`http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`);\n        const data = await res.json();\n        setMovie(data);\n      } catch (err) {\n        setError(\"⛔ \" + err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovieDetails();\n  }, [selectedId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-back\",\n          onClick: () => onCloseMovie(),\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          alt: `Poster of ${title}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [released, \" \\u2022 \", runtime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), imdbRating]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: [/*#__PURE__*/_jsxDEV(StarRating, {\n            maxRating: 10,\n            size: 24,\n            onSetRating: setUserRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-add\",\n            onClick: handleAdd,\n            children: \"Add to list\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Starring \", actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Directed by \", director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieDetails, \"IzUSpaS48xqdX/GA7QuuhJsYAwA=\");\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["useState","useEffect","StarRating","Loader","jsxDEV","_jsxDEV","Fragment","_Fragment","KEY","MovieDetails","_ref","_s","selectedId","onCloseMovie","onAddWatched","isLoading","setIsLoading","error","setError","movie","setMovie","userRating","setUserRating","Title","title","Year","year","Poster","poster","Runtime","runtime","imdbRating","Plot","plot","Released","released","Actors","actors","Director","director","Genre","genre","handleAdd","newWatchedMovie","imdbId","Number","split","at","getMovieDetails","res","fetch","data","json","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","maxRating","size","onSetRating","_c","$RefreshReg$"],"sources":["C:/Users/bram1/Documents/GitHub/react/usePopcorn/src/components/MovieDetails.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport StarRating from \"./StarRating\";\r\nimport Loader from \"./UI/Loader\";\r\n\r\nconst KEY = \"5fdc2a2\";\r\n\r\nfunction MovieDetails({ selectedId, onCloseMovie, onAddWatched }) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [movie, setMovie] = useState({});\r\n  const [userRating, setUserRating] = useState(\"\");\r\n\r\n  const {\r\n    Title: title,\r\n    Year: year,\r\n    Poster: poster,\r\n    Runtime: runtime,\r\n    imdbRating,\r\n    Plot: plot,\r\n    Released: released,\r\n    Actors: actors,\r\n    Director: director,\r\n    Genre: genre,\r\n  } = movie;\r\n\r\n  function handleAdd() {\r\n    const newWatchedMovie = {\r\n      imdbId: selectedId,\r\n      title,\r\n      year,\r\n      poster,\r\n      imdbRating: Number(imdbRating),\r\n      runtime: Number(runtime.split(\" \").at(0)),\r\n      userRating,\r\n    };\r\n\r\n    onAddWatched(newWatchedMovie);\r\n    onCloseMovie();\r\n  }\r\n\r\n  useEffect(\r\n    function () {\r\n      async function getMovieDetails() {\r\n        try {\r\n          setIsLoading(true);\r\n          const res = await fetch(\r\n            `http://www.omdbapi.com/?apikey=${KEY}&i=${selectedId}`\r\n          );\r\n\r\n          const data = await res.json();\r\n          setMovie(data);\r\n        } catch (err) {\r\n          setError(\"⛔ \" + err.message);\r\n        } finally {\r\n          setIsLoading(false);\r\n        }\r\n      }\r\n      getMovieDetails();\r\n    },\r\n    [selectedId]\r\n  );\r\n\r\n  return (\r\n    <div className=\"details\">\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          <header>\r\n            <button className=\"btn-back\" onClick={() => onCloseMovie()}>\r\n              &larr;\r\n            </button>\r\n\r\n            <img src={poster} alt={`Poster of ${title}`} />\r\n            <div className=\"details-overview\">\r\n              <h2>{title}</h2>\r\n              <p>\r\n                {released} &bull; {runtime}\r\n              </p>\r\n              <p>{genre}</p>\r\n              <p>\r\n                <span>⭐</span>\r\n                {imdbRating}\r\n              </p>\r\n            </div>\r\n          </header>\r\n\r\n          <section>\r\n            <div className=\"rating\">\r\n              <StarRating\r\n                maxRating={10}\r\n                size={24}\r\n                onSetRating={setUserRating}\r\n              />\r\n              {\r\n                <button className=\"btn-add\" onClick={handleAdd}>\r\n                  Add to list\r\n                </button>\r\n              }\r\n            </div>\r\n\r\n            <p>\r\n              <em>{plot}</em>\r\n            </p>\r\n            <p>Starring {actors}</p>\r\n            <p>Directed by {director}</p>\r\n          </section>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}